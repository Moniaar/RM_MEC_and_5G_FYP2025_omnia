#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/internet-module.h"
#include "ns3/point-to-point-module.h"
#include "ns3/applications-module.h"
#include "ns3/netanim-module.h"
#include "ns3/mec-server.h"

using namespace ns3;

NS_LOG_COMPONENT_DEFINE("MecSimulation");

int main(int argc, char *argv[]) {
    LogComponentEnable("MecServer", LOG_LEVEL_INFO);

    NodeContainer nodes;
    nodes.Create(2);

    PointToPointHelper p2p;
    p2p.SetDeviceAttribute("DataRate", StringValue("5Mbps"));
    p2p.SetChannelAttribute("Delay", StringValue("2ms"));

    NetDeviceContainer devices = p2p.Install(nodes);

    InternetStackHelper internet;
    internet.Install(nodes);

    Ipv4AddressHelper ipv4;
    ipv4.SetBase("192.168.1.0", "255.255.255.0");
    Ipv4InterfaceContainer interfaces = ipv4.Assign(devices);

    // Install MEC Server on Node 1
    Ptr<MecServer> mecServer = CreateObject<MecServer>();
    nodes.Get(1)->AddApplication(mecServer);
    mecServer->SetStartTime(Seconds(1.0));
    mecServer->SetStopTime(Seconds(10.0));

    // Create a UDP client on Node 0
    uint16_t port = 8080;
    OnOffHelper clientHelper("ns3::UdpSocketFactory", InetSocketAddress(interfaces.GetAddress(1), port));
    clientHelper.SetAttribute("DataRate", StringValue("500kbps"));
    clientHelper.SetAttribute("PacketSize", UintegerValue(1024));

    ApplicationContainer clientApp = clientHelper.Install(nodes.Get(0));
    clientApp.Start(Seconds(2.0));
    clientApp.Stop(Seconds(9.0));

    // Enable NetAnim tracing
    AnimationInterface anim("mec-animation.xml");

    Simulator::Run();
    Simulator::Destroy();

    return 0;
}
